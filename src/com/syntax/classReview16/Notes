OOOPs
Inheritance
Polymorphism
Abstraction
Encapsulation

Abstraction:
Process of hiding implementation details and showing only the important into to the user
Anything we work with that we dont have the knowledge of


Real Life Examples
1.We use different apps like whatsapp we just write the text and click on share
button we do not care how that text is converted in the form of signals and sent to
the other party we just select the contact and write text click on send button
text is send
2. Think of the car we do not care how the engine works we only care how to use steering gas paddle
all of the internal details have been hidden from us.
3. Other examples when we put food into the microwave we do not care how it works we just
set the timer and the temperature

How to implement Abstraction in Java
1. using Abstract classes
2. using Interface

Why we need it.
Lets say we are building a building we know about the first 5 flooors but we do not know
how other floors will look  like. We can start building and then implement or decide
remaning feature

In java

if you want to use the full benefit of the classes class inheritance and we are
want to provide the implementation details for some of the methods
we should be going with abstract classes

Important rules
1) Private methods can not be used bcs they do not participate in inheritance
2) We can not declare the abstract methods as final
3) Class must be abstract if we want to properly follow the abstraction bcs that way
we can bound the implementer for input and output
4) In the abstract class we can have abstract and non-abstract methods
5) If we have at ist one abstract method our class must be declared as abstract
6) We can declare a class as abstract even we do not have any abstract methods

--------------

Intefaces:
it is a mechanism to archive abstraction
Interfaces are containers which set rules for other classes and interfaces
When do we use it?
When we do not anything about the implementation of any method that we need go with interfaces




