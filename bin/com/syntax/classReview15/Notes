Polymorphism:
polymorphism is the ability of the object to take many forms
polymorphism - can be achieved in 2 ways:
1. overloading (static)/compile time,
2. dynamic (overriding)/runtime

For overriding to work we must have a relationship of inheritance between 2 classes.
1. The things witch do not play their part in inheritance can not be overridden:
private members, initializer blocks, constructors.
2. If a method is final we can not override it
3. If a class is final we can not override anything from that class because we can not inheritance from that class


Must have for overriding
1) Method signature must be same i.e. name of the method parameter sequence types and number of parameters
(only contain method name & parameters)
2) Return type should be same
3) We can not narrow the visibility
if a method has a public access modifier we can not make it private


Final Keyword
final is a keyword in java thar we can use with class field and method
Final keyword with class:
1) when used with class no other class can inherit from that class
2) when used with var can not change the value of var
3) when used with methods can not override that method

Why we should make our class final?
when ever we have a very long inheritance relationship or very big class
or we do not want others to inherit and override our methods
we declare that class as final.
if we do not want anyone else to change/override behaviours of our methods we declare those methods as final
if we do not want to change the values of variables we declare them as final,
example Gravitation acceleration or value of Pi


Benefits of final classes
1) Privacy
2) A<-B<-C<-D... if we have a long chain of classes which have a inheritance relationship
and if we want to restrict this chain we can use the final keyword
Why? because we may waste a lot memory if we do not use these classes properly